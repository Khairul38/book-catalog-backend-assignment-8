// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(uuid())
  name       String
  email      String   @unique
  password   String
  role       UserRole
  contactNo  String
  address    String
  profileImg String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  reviewsAndRatings ReviewAndRating[]
  bookings          Booking[]

  @@map("users")
}

model Category {
  id        String   @id @default(uuid())
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  rooms Room[]

  @@map("categories")
}

model Room {
  id          String   @id @default(uuid())
  title       String
  description String
  adults      Int
  size        Int
  price       Int
  categoryId  String
  category    Category @relation(fields: [categoryId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  reviewsAndRatings ReviewAndRating[]
  bookings          Booking[]

  @@map("rooms")
}

model ReviewAndRating {
  id     String @id @default(uuid())
  review String
  rating Int
  userId String
  user   User   @relation(fields: [userId], references: [id])
  roomId String
  room   Room   @relation(fields: [roomId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("reviews_and_ratings")
}

model Booking {
  id     String        @id @default(uuid())
  userId String
  user   User          @relation(fields: [userId], references: [id])
  roomId String
  room   Room          @relation(fields: [roomId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("bookings")
}

enum UserRole {
  super_admin
  admin
  customer
}
